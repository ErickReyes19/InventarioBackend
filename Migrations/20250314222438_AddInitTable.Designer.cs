// <auto-generated />
using System;
using Inventario.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventario.Migrations
{
    [DbContext(typeof(DbContextInventario))]
    [Migration("20250314222438_AddInitTable")]
    partial class AddInitTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Inventario.Models.Empleado", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .IsFixedLength();

                    b.Property<bool?>("activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("edad")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Inventario.Models.Usuario", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .IsFixedLength();

                    b.Property<bool?>("activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("contrasena")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("empleado_id")
                        .HasColumnType("longtext");

                    b.Property<string>("empleadoid")
                        .HasColumnType("char(36)");

                    b.Property<string>("roleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("role_id")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("usuario")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("empleadoid");

                    b.HasIndex("roleId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Permiso", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .IsFixedLength();

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .IsFixedLength();

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.Property<string>("RolId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PermisoId")
                        .HasColumnType("char(36)");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolePermiso", (string)null);
                });

            modelBuilder.Entity("Inventario.Models.Usuario", b =>
                {
                    b.HasOne("Inventario.Models.Empleado", "empleado")
                        .WithMany("Usuario")
                        .HasForeignKey("empleadoid");

                    b.HasOne("Role", "role")
                        .WithMany("Usuarios")
                        .HasForeignKey("roleId");

                    b.Navigation("empleado");

                    b.Navigation("role");
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.HasOne("Permiso", "Permiso")
                        .WithMany("RolePermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Role", "Rol")
                        .WithMany("RolePermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Inventario.Models.Empleado", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Permiso", b =>
                {
                    b.Navigation("RolePermisos");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("RolePermisos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
